@model blog.Models.User

@{
    ViewData["Title"] = "Register";
}

<div class="row mt-3">
    <div class="text-center">
        <h3>Register</h3>
    </div>
    <div class="text-center text-success">
        @TempData["Information"]
    </div>
    <div class="text-center text-danger">
        @TempData["Error"]
    </div>
    @using (Html.BeginForm("CreateUser", "Login", FormMethod.Post, new { @class = "needs-validation" }))
    {
        <div class="form-group col-md-6 mb-1 mx-auto">
            <label for="loginInput" class="mb-2">Login</label>
            @Html.TextBoxFor(m => m.Login, new { @id = "loginInput", @class = "form-control"})
        </div>
        <div class="text-center text-danger mb-3">
            @Html.ValidationMessageFor(m => m.Login, TempData["LoginError"]?.ToString())
        </div>
        <div class="form-group col-md-6 mb-1 mx-auto">
            <label for="emailInput" class="mb-2">Email</label>
            @Html.TextBoxFor(m => m.Email, new { @id = "emailInput", @class = "form-control"})
        </div>
        <div class="text-center text-danger mb-3">
            @Html.ValidationMessageFor(m => m.Email, TempData["EmailError"]?.ToString())
        </div>
        <div class="form-group col-md-6 mb-1 mx-auto">
            <label for="passwordInput" class="mb-2">Password</label>
            @Html.TextBoxFor(m => m.Password, new { @id = "passwordInput", @class = "form-control", @type = "password" })
        </div>
        <div class="text-center text-danger mb-3">
            @Html.ValidationMessageFor(m => m.Password)
        </div>
        <div class="d-flex justify-content-center">
            <button type="submit" class="btn btn-primary">Sign Up</button>
        </div>
    }
</div>
